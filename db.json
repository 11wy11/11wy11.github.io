{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/indigo/source/css/style.less","path":"css/style.less","modified":1,"renderable":1},{"_id":"themes/indigo/source/img/alipay.jpg","path":"img/alipay.jpg","modified":1,"renderable":1},{"_id":"themes/indigo/source/img/cc.png","path":"img/cc.png","modified":1,"renderable":1},{"_id":"themes/indigo/source/img/content-backgroud.jpg","path":"img/content-backgroud.jpg","modified":1,"renderable":1},{"_id":"themes/indigo/source/img/img-err.png","path":"img/img-err.png","modified":1,"renderable":1},{"_id":"themes/indigo/source/img/wechat.jpg","path":"img/wechat.jpg","modified":1,"renderable":1},{"_id":"themes/indigo/source/img/img-loading.png","path":"img/img-loading.png","modified":1,"renderable":1},{"_id":"themes/indigo/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes/indigo/source/js/main.min.js","path":"js/main.min.js","modified":1,"renderable":1},{"_id":"themes/indigo/source/js/search.js","path":"js/search.js","modified":1,"renderable":1},{"_id":"themes/indigo/source/js/search.min.js","path":"js/search.min.js","modified":1,"renderable":1},{"_id":"themes/indigo/source/img/brand.jpg","path":"img/brand.jpg","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.eot","path":"css/fonts/roboto/Roboto-Bold.eot","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff","path":"css/fonts/roboto/Roboto-Bold.woff","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff2","path":"css/fonts/roboto/Roboto-Bold.woff2","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.eot","path":"css/fonts/roboto/Roboto-Light.eot","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff","path":"css/fonts/roboto/Roboto-Light.woff","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff2","path":"css/fonts/roboto/Roboto-Light.woff2","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.eot","path":"css/fonts/roboto/Roboto-Medium.eot","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff","path":"css/fonts/roboto/Roboto-Medium.woff","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff2","path":"css/fonts/roboto/Roboto-Medium.woff2","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.eot","path":"css/fonts/roboto/Roboto-Regular.eot","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff","path":"css/fonts/roboto/Roboto-Regular.woff","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff2","path":"css/fonts/roboto/Roboto-Regular.woff2","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.eot","path":"css/fonts/roboto/Roboto-Thin.eot","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff","path":"css/fonts/roboto/Roboto-Thin.woff","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff2","path":"css/fonts/roboto/Roboto-Thin.woff2","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff","path":"css/fonts/fontawesome/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff2","path":"css/fonts/fontawesome/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.ttf","path":"css/fonts/roboto/Roboto-Bold.ttf","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.ttf","path":"css/fonts/roboto/Roboto-Light.ttf","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.ttf","path":"css/fonts/roboto/Roboto-Medium.ttf","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.ttf","path":"css/fonts/roboto/Roboto-Regular.ttf","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.ttf","path":"css/fonts/roboto/Roboto-Thin.ttf","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/FontAwesome.otf","path":"css/fonts/fontawesome/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.eot","path":"css/fonts/fontawesome/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.ttf","path":"css/fonts/fontawesome/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/indigo/source/img/avatar.jpg","path":"img/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.svg","path":"css/fonts/fontawesome/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/indigo/.editorconfig","hash":"67a03b88eadd7810f2e01866e73814074ecd3b87","modified":1552094219449},{"_id":"themes/indigo/LICENSE","hash":"9dd0f70bc72c9d575447655526aded395bb93754","modified":1552094219450},{"_id":"themes/indigo/README.md","hash":"cfc7d09fc2ce26003954d647e3bbf98f71574eb7","modified":1552094219450},{"_id":"themes/indigo/_config.yml","hash":"39bfc3a5422eb045e328c0ef33f92fb36b304163","modified":1552285023850},{"_id":"themes/indigo/package.json","hash":"3ad9b9ccb1ddaad3136f179a7ebff7d7b1c193f7","modified":1552094219483},{"_id":"source/_posts/Vue-global-component.md","hash":"1dcea3b45cb3389f1de4b2c54cf1cd6392b327dd","modified":1552481008021},{"_id":"source/_posts/create-blog-process.md","hash":"8cceb112b2d100cf37d4fb6ee15cca78b2af7211","modified":1552480968308},{"_id":"source/_posts/git-command.md","hash":"497e5517fda91b9ef81ae3a530d4f6b3bdfce324","modified":1552480968316},{"_id":"source/_posts/oracle-st-geometry.md","hash":"9acef167beeb3d4fd311f654a132e9d9ca66235d","modified":1552480992806},{"_id":"source/categories/index.md","hash":"46e6b523231a40691c291165089d8d82a9c1f534","modified":1552284905465},{"_id":"source/tags/index.md","hash":"48507701015e65e50bf8bae640a9ea3af3ad6d5f","modified":1552284920113},{"_id":"themes/indigo/layout/archive.ejs","hash":"6897178ba358379d6a4b7c0ba1bc2ab97ad5303a","modified":1552094219478},{"_id":"themes/indigo/layout/categories.ejs","hash":"efae06b4d83aaf73ab93260381e891825bf404ac","modified":1552094219479},{"_id":"themes/indigo/layout/category.ejs","hash":"e5ba5cc2e092c199285b8097ef12ffe70bf84c91","modified":1552094219479},{"_id":"themes/indigo/layout/index.ejs","hash":"772c1985c7743e101598b4eddc253f9174c5605b","modified":1552094219480},{"_id":"themes/indigo/layout/layout.ejs","hash":"770af84fff104c398ce8b6c995130cddd3e9a1e9","modified":1552094219481},{"_id":"themes/indigo/layout/page.ejs","hash":"567c42b978da4c39b8b4982df19b940c26bc32a4","modified":1552094219481},{"_id":"themes/indigo/layout/post.ejs","hash":"efc3352828351f8574c51e8a93dc56c66660c3b1","modified":1552094219482},{"_id":"themes/indigo/layout/tag.ejs","hash":"90a231dea3a364b329a740e5d6c49c8cf5664fe9","modified":1552094219482},{"_id":"themes/indigo/layout/tags.ejs","hash":"1fc0461e9602b53899ec756e4361beb8cce74740","modified":1552094219483},{"_id":"themes/indigo/languages/en.yml","hash":"ba78def0453d08172248e220a1f9e145e99b4f23","modified":1552101455849},{"_id":"themes/indigo/languages/ja.yml","hash":"65a32717335211a45771a21fb7d7778808c6f0aa","modified":1552094219453},{"_id":"themes/indigo/languages/nl-NL","hash":"b540b76af76c1a180c517089ed2ad770cbded170","modified":1552094219453},{"_id":"themes/indigo/languages/zh-CN.yml","hash":"6806e4c305facf19cbe4e37ccc5d6b00cb56e199","modified":1552094219454},{"_id":"themes/indigo/languages/zh-TW.yml","hash":"9b8bdd9c8b68716f364503926dca6ba8571ee5ff","modified":1552094219454},{"_id":"themes/indigo/scripts/plugins.js","hash":"00ea278ea77733f546439aed507ce69a298da362","modified":1552094219484},{"_id":"source/_posts/create-blog-process/res1.png","hash":"7bced6c677f54ddf2cab422b41fa7e4ee801d4ef","modified":1552181804776},{"_id":"source/_posts/create-blog-process/res2.png","hash":"8b275edb7dfb6b41881948d056a000dd42b81ec1","modified":1552183091082},{"_id":"source/_posts/oracle-st-geometry/res2.png","hash":"1ecd2dca7a43279126dac6f14764ab3ac44a0ad6","modified":1552099609145},{"_id":"source/_posts/oracle-st-geometry/res3.png","hash":"45aeb3107bf5fa21a9e84e8d6d031e8c7abd9b2e","modified":1552099620364},{"_id":"source/_posts/oracle-st-geometry/res4.png","hash":"4085036c01fdee988513c35cf1a00a88c4df7f08","modified":1552099631002},{"_id":"themes/indigo/layout/_partial/after-footer.ejs","hash":"1351dbfca311f0d50a939f9e1a91c4f65bbcdf5f","modified":1552094219455},{"_id":"themes/indigo/layout/_partial/archive.ejs","hash":"c294c98617ce14082f9b3d5eec83328f480f5597","modified":1552094219456},{"_id":"themes/indigo/layout/_partial/head.ejs","hash":"9dfc591ec6c918c5b60b6ccbc5d1e18fea9faf8e","modified":1552094219457},{"_id":"themes/indigo/layout/_partial/footer.ejs","hash":"c78444f5b350ca79b260361bf3e5b6361d2661ba","modified":1552094219456},{"_id":"themes/indigo/layout/_partial/header.ejs","hash":"648db446567a81371b8a29d719d13636aa157012","modified":1552094219457},{"_id":"themes/indigo/layout/_partial/index-item.ejs","hash":"7208d4083ee3355aa969972a2ce249a67d56b3a6","modified":1552094219458},{"_id":"themes/indigo/layout/_partial/loading.ejs","hash":"8b3e037dd5f3d4564012689c5cd6f63caf73df0f","modified":1552094219458},{"_id":"themes/indigo/layout/_partial/menu.ejs","hash":"ea6aded24a68de0914f24b3760f766b5e1c9835a","modified":1552094219459},{"_id":"themes/indigo/layout/_partial/paginator.ejs","hash":"13952250463f70d1c1bbbfdd7f4ee8160dd6d99b","modified":1552094219459},{"_id":"themes/indigo/layout/_partial/post.ejs","hash":"20597ac0d547aea37680ecf195eb129fe5ee19d8","modified":1552094219467},{"_id":"themes/indigo/layout/_partial/script.ejs","hash":"b28106b35a9fc63eefa69c2ca8b923eb1f731832","modified":1552094219476},{"_id":"themes/indigo/layout/_partial/search.ejs","hash":"752109904304fdb8e988ee1254df2af9c0701466","modified":1552094219477},{"_id":"themes/indigo/layout/_partial/tags-bar.ejs","hash":"30ec74f081cc4c273a7bcd5d57da99072e9f0755","modified":1552094219477},{"_id":"themes/indigo/source/css/style.less","hash":"cf362925ae099b810fd5763e6b724b823612ed15","modified":1552094219537},{"_id":"themes/indigo/source/img/alipay.jpg","hash":"6054d9ed2ca7cd1f645b729e05632134467d4daa","modified":1552094219538},{"_id":"themes/indigo/source/img/cc.png","hash":"ebce75a62b40976a72d43f0bd937d859ac24d87c","modified":1552094219540},{"_id":"themes/indigo/source/img/content-backgroud.jpg","hash":"8654f4a71599be4a90f8b63d4d202c5848b46073","modified":1552186488428},{"_id":"themes/indigo/source/img/img-err.png","hash":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b","modified":1552094219541},{"_id":"themes/indigo/source/img/wechat.jpg","hash":"ef069cc9e80c7553fd60589b0727bbbf8c6de372","modified":1552094219542},{"_id":"themes/indigo/source/img/img-loading.png","hash":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031","modified":1552094219541},{"_id":"themes/indigo/source/js/main.js","hash":"ff44bb7b2f1f08757093fd6ffa92c9ac2b674109","modified":1552094219543},{"_id":"themes/indigo/source/js/main.min.js","hash":"e77a89fe5a9827ac590a288778176b233dd900ad","modified":1552094219543},{"_id":"themes/indigo/source/js/search.js","hash":"a4d6c9c566ec1ca71ddacfd14c58f7ddaf9db24d","modified":1552094219544},{"_id":"themes/indigo/source/js/search.min.js","hash":"a8a450bb8b1ca9ad577052addcbd3393f1af6c6a","modified":1552094219544},{"_id":"source/_posts/oracle-st-geometry/res1.png","hash":"3ecfe2732e240c5940e6634c147332c79d93ee0c","modified":1552098899020},{"_id":"themes/indigo/source/img/brand.jpg","hash":"234607cb54d04a5383b7cf10209ae9207f36ec94","modified":1552095697224},{"_id":"themes/indigo/layout/_partial/plugins/baidu.ejs","hash":"da1355eea131952031e54c45560555e6d3aa5a33","modified":1552094219460},{"_id":"themes/indigo/layout/_partial/plugins/dynamic-title.ejs","hash":"3b877868c4a6fc217ea6f3314544830280a77472","modified":1552094219461},{"_id":"themes/indigo/layout/_partial/plugins/disqus.ejs","hash":"86fe837ab16cb60754b0a73bb9efa38b04f3023f","modified":1552094219461},{"_id":"themes/indigo/layout/_partial/plugins/gitalk.ejs","hash":"8a0c390ed475600c627bcfa41df15a54f60eca3c","modified":1552094219462},{"_id":"themes/indigo/layout/_partial/plugins/gitment.ejs","hash":"5f6ceb7f4b9b579e8e3f87894447f556a53f9385","modified":1552094219462},{"_id":"themes/indigo/layout/_partial/plugins/google-analytics.ejs","hash":"b5b87761751a897949e085a8f1ace78b0b8babd5","modified":1552094219463},{"_id":"themes/indigo/layout/_partial/plugins/hyper-comments.ejs","hash":"d0e6f1d713e7a1c0cc5fe25f3e574a4b791f938a","modified":1552094219464},{"_id":"themes/indigo/layout/_partial/plugins/mathjax.ejs","hash":"3a5c9f7d22d30cd8ffa4e83a8d3976db22815994","modified":1552094219464},{"_id":"themes/indigo/layout/_partial/plugins/page-visit.ejs","hash":"bb9deb32c54ea6820f622b923e62592915e9f21f","modified":1552094219465},{"_id":"themes/indigo/layout/_partial/plugins/site-visit.ejs","hash":"a2c247c2e32016563dd6a22c21474072d93f4dbd","modified":1552094219465},{"_id":"themes/indigo/layout/_partial/plugins/tajs.ejs","hash":"ef9c77d8c6e004b014c83c5f9333e7174f8bafa3","modified":1552094219466},{"_id":"themes/indigo/layout/_partial/plugins/uyan.ejs","hash":"ddf290e90dc1c779f42a48e1bd852ca932148dfb","modified":1552094219466},{"_id":"themes/indigo/layout/_partial/plugins/valine.ejs","hash":"0a6245da90d54177441d32a6f1766b4f434660db","modified":1552094219467},{"_id":"themes/indigo/layout/_partial/post/category.ejs","hash":"c08e44cbd7315dec7afb6054b04d3c7b82c3bde8","modified":1552094219468},{"_id":"themes/indigo/layout/_partial/post/comment.ejs","hash":"2751d0f694f72bb886664ace021d698ea0e8f0c7","modified":1552094219469},{"_id":"themes/indigo/layout/_partial/post/copyright.ejs","hash":"dd1dcc7776021ab3d68065f8532efead4c2b8051","modified":1552094219469},{"_id":"themes/indigo/layout/_partial/post/date.ejs","hash":"c5adcec8db1506c378d39855a697e1bb1165646c","modified":1552094219470},{"_id":"themes/indigo/layout/_partial/post/head-meta.ejs","hash":"f137c126672769e9571be2bb0a70ea8dda644b0e","modified":1552094219470},{"_id":"themes/indigo/layout/_partial/post/nav.ejs","hash":"03719097851575a2c1bb95774058b224f6402a1f","modified":1552094219471},{"_id":"themes/indigo/layout/_partial/post/reward-btn.ejs","hash":"b46160005224821a439dec9f1ff183e2f66d9f4b","modified":1552094219472},{"_id":"themes/indigo/layout/_partial/post/reward.ejs","hash":"097c0276a61665e5ee96e5d5d85a7d6ae5ab2f49","modified":1552094219472},{"_id":"themes/indigo/layout/_partial/post/share.ejs","hash":"7d79a67b3e5e6989f22fb0e0904fa540bfca5fcc","modified":1552094219473},{"_id":"themes/indigo/layout/_partial/post/share-fab.ejs","hash":"2ec7de870988cfbc8ea9872cddf7e4076ac64a57","modified":1552094219473},{"_id":"themes/indigo/layout/_partial/post/tag.ejs","hash":"412894001b1ac6e63012b26b1109a0856651c076","modified":1552094219474},{"_id":"themes/indigo/layout/_partial/post/title.ejs","hash":"eaad7af7888bddd7095243a43ff38f55ad8c494a","modified":1552094219474},{"_id":"themes/indigo/layout/_partial/post/toc.ejs","hash":"d534b888d24df7703c632539d4bdd638fa764e98","modified":1552094219475},{"_id":"themes/indigo/layout/_partial/post/updated.ejs","hash":"00fedf7971c0bda0623d968bc0614e512d19a985","modified":1552094219476},{"_id":"themes/indigo/source/css/_partial/archives.less","hash":"382fc22cd5cc073e881768a65600d97eba9f1d21","modified":1552094219486},{"_id":"themes/indigo/source/css/_partial/article.less","hash":"f047c8ca92f9e6a8e1299ace0cce91514631a21c","modified":1552094219486},{"_id":"themes/indigo/source/css/_partial/gotop.less","hash":"bad63006b3bd4849bf53ad38482af0d9971061d3","modified":1552094219488},{"_id":"themes/indigo/source/css/_partial/header.less","hash":"8601838c59b76d97f95aacb771262ab26081f429","modified":1552188074704},{"_id":"themes/indigo/source/css/_partial/highlight.less","hash":"99e48793dc0b4ffb66ecaf2d1315145872f9bb98","modified":1552094219489},{"_id":"themes/indigo/source/css/_partial/layout.less","hash":"5f783f34bf093e654e8922ed4a2af8b7b2cd41c4","modified":1552094219490},{"_id":"themes/indigo/source/css/_partial/lightbox.less","hash":"38419aaf3c1832e84ade331f051f110fdc8b960f","modified":1552094219491},{"_id":"themes/indigo/source/css/_partial/loading.less","hash":"85157ddf3877b5c58e8f1d737dda3dfb1bfd540b","modified":1552094219491},{"_id":"themes/indigo/source/css/_partial/page.less","hash":"33b0a5edcedc26a4c592c812c5785bb20d3c93db","modified":1552094219492},{"_id":"themes/indigo/source/css/_partial/postlist.less","hash":"516cded3c7f1db4cacfa898bcaf0adfae7f3a2e1","modified":1552094219493},{"_id":"themes/indigo/source/css/_partial/reward.less","hash":"f5e89ea5414e3096a28c8c96e86c3f669040a892","modified":1552094219493},{"_id":"themes/indigo/source/css/_partial/roboto.less","hash":"3e457942995da8840e7662fa6cb551a7e12ea294","modified":1552094219494},{"_id":"themes/indigo/source/css/_partial/search.less","hash":"dbc23e77e586ee682a21475f5eb568628ea6720f","modified":1552094219494},{"_id":"themes/indigo/source/css/_partial/share.less","hash":"a683c96a59470efd35722b763c55149a46e35156","modified":1552094219495},{"_id":"themes/indigo/source/css/_partial/tags.less","hash":"01eb7f84193180928a6ed4796ee8802f6c1628e7","modified":1552094219496},{"_id":"themes/indigo/source/css/_partial/variable.less","hash":"8ecbb9182446dafc50dc426c14a6d5c810c4a30d","modified":1552188062388},{"_id":"themes/indigo/source/css/_partial/waves.less","hash":"a02eaa601887f947257f6016679b62dc96a61c0c","modified":1552094219497},{"_id":"themes/indigo/source/css/_plugin/valine.less","hash":"b8f8d8037fb3c8525da12e580bd9e2ff9f298132","modified":1552094219498},{"_id":"themes/indigo/source/css/_partial/fontawesome.less","hash":"a3ecbd6ccf5b56ac39df710c34a149b82989a498","modified":1552094219488},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.eot","hash":"a76cd602f5188b9fbd4ba7443dcb9c064e3dbf10","modified":1552094219512},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff","hash":"ee99cd87a59a9a5d4092c83232bb3eec67547425","modified":1552094219515},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff2","hash":"933b866d09c2b087707a98dab64b3888865eeb96","modified":1552094219516},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.eot","hash":"42fe156996197e5eb0c0264c5d1bb3b4681f4595","modified":1552094219517},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff","hash":"6300f659be9e834ab263efe2fb3c581d48b1e7b2","modified":1552094219519},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff2","hash":"bbdc28b887400fcb340b504ec2904993af42a5d7","modified":1552094219520},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.eot","hash":"1517f4b6e1c5d0e5198f937557253aac8fab0416","modified":1552094219525},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff","hash":"d45f84922131364989ad6578c7a06b6b4fc22c34","modified":1552094219528},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff2","hash":"6cc1b73571af9e827c4e7e91418f476703cd4c4b","modified":1552094219529},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.eot","hash":"77ae3e980ec03863ebe2587a8ef9ddfd06941db0","modified":1552094219529},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff","hash":"74734dde8d94e7268170f9b994dedfbdcb5b3a15","modified":1552094219532},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff2","hash":"ed1558b0541f5e01ce48c7db1588371b990eec19","modified":1552094219533},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.eot","hash":"0790a51a848dbe7292c98f9d0459218bf1a8ffdd","modified":1552094219533},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff","hash":"fbc3e71d456c96667d8082ab910e3946ef89240b","modified":1552094219536},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff2","hash":"2449e3dac5ddb7c3da8bb07450493b62d052758c","modified":1552094219537},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1552094219510},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1552094219511},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.ttf","hash":"47327df0f35e7cd7c8645874897a7449697544ae","modified":1552094219514},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.ttf","hash":"e321c183e2b75ee19813892b7bac8d7c411cb88a","modified":1552094219518},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.ttf","hash":"6060ca726b9760b76f7c347dce9d2fa1fe42ec92","modified":1552094219527},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.ttf","hash":"824b5480c977a8166e177e5357d13164ccc45f47","modified":1552094219531},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.ttf","hash":"173ed64528b4d010a76d8d38deb1d7e7eed58eda","modified":1552094219535},{"_id":"themes/indigo/source/css/fonts/fontawesome/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1552094219500},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1552094219502},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1552094219509},{"_id":"themes/indigo/source/img/avatar.jpg","hash":"145de1506d3b21adad907dea0d55c5a936f27b04","modified":1552095589886},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1552094219507}],"Category":[{"name":"前端","_id":"cjt774d7r0004ngbd0kx706ro"},{"name":"Tools","_id":"cjt774d7z0008ngbd687gpqvw"},{"name":"ArcGIS","_id":"cjt774d82000cngbd5ou767hk"},{"name":"-使用技巧","_id":"cjt774d84000fngbdnq1p7y8d"}],"Data":[],"Page":[{"title":"目录","date":"2019-03-10T02:40:38.000Z","layout":"categories","commets":false,"_content":"","source":"categories/index.md","raw":"---\ntitle: 目录\ndate: 2019-03-10 10:40:38\nlayout: categories\ncommets: false\n---\n","updated":"2019-03-11T06:15:05.465Z","path":"categories/index.html","comments":1,"_id":"cjt774d7m0001ngbd04867jwj","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","date":"2019-03-10T02:40:04.000Z","layout":"tags","commets":false,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2019-03-10 10:40:04\nlayout: tags\ncommets: false\n---\n","updated":"2019-03-11T06:15:20.113Z","path":"tags/index.html","comments":1,"_id":"cjt774d7q0003ngbdjbllthsm","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Vue全局添加组件","date":"2019-03-09T02:39:22.000Z","_content":"### 一. 背景  \n在项目中有时需要反复用到如区域选择器等组件，每次使用时都需要在对应的vue中添加import,并在component中注册，为了避免多次书写引用代码，可以自定义全局组件，只需要在main.js中一次性注册在vue项目中，可以自定义组件像vue-resource一样使用Vue.use（）方法来使用。\n### 二. 具体实现方法  \n1、首先建一个自定义组件的文件夹，比如叫loading，在该文件夹下新建一个index.js，一个自定义组件loading.vue,在这个loading.vue里面就是这个组件的具体的内容，\n\n2、在index.js中，规定使用这个组件的名字，以及使用方法，如：\n    ``` vuejs\n    \n    import loadingComponent from './loading.vue'\n     \n    const loading={\n        install:function(Vue){\n            Vue.component('Loading',loadingComponent)\n        }  //'Loading'这就是后面可以使用的组件的名字，install是默认的一个方法\n    };\n    export default loading;\n    ```\n3、只要在main.js中规定了install方法，就可以像一些公共的插件一样使用Vue.use()来使用，如：\n    ``` js\n    import loading from './loading'\n    Vue.use(loading）\n    ```\n\n","source":"_posts/Vue-global-component.md","raw":"---\ntitle: Vue全局添加组件\ndate: 2019-03-09 10:39:22\ntags: Vue\ncategories: 前端\n---\n### 一. 背景  \n在项目中有时需要反复用到如区域选择器等组件，每次使用时都需要在对应的vue中添加import,并在component中注册，为了避免多次书写引用代码，可以自定义全局组件，只需要在main.js中一次性注册在vue项目中，可以自定义组件像vue-resource一样使用Vue.use（）方法来使用。\n### 二. 具体实现方法  \n1、首先建一个自定义组件的文件夹，比如叫loading，在该文件夹下新建一个index.js，一个自定义组件loading.vue,在这个loading.vue里面就是这个组件的具体的内容，\n\n2、在index.js中，规定使用这个组件的名字，以及使用方法，如：\n    ``` vuejs\n    \n    import loadingComponent from './loading.vue'\n     \n    const loading={\n        install:function(Vue){\n            Vue.component('Loading',loadingComponent)\n        }  //'Loading'这就是后面可以使用的组件的名字，install是默认的一个方法\n    };\n    export default loading;\n    ```\n3、只要在main.js中规定了install方法，就可以像一些公共的插件一样使用Vue.use()来使用，如：\n    ``` js\n    import loading from './loading'\n    Vue.use(loading）\n    ```\n\n","slug":"Vue-global-component","published":1,"updated":"2019-03-13T12:43:28.021Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt774d7f0000ngbdrj9towib","content":"<h3 id=\"一-背景\"><a href=\"#一-背景\" class=\"headerlink\" title=\"一. 背景\"></a>一. 背景</h3><p>在项目中有时需要反复用到如区域选择器等组件，每次使用时都需要在对应的vue中添加import,并在component中注册，为了避免多次书写引用代码，可以自定义全局组件，只需要在main.js中一次性注册在vue项目中，可以自定义组件像vue-resource一样使用Vue.use（）方法来使用。</p>\n<h3 id=\"二-具体实现方法\"><a href=\"#二-具体实现方法\" class=\"headerlink\" title=\"二. 具体实现方法\"></a>二. 具体实现方法</h3><p>1、首先建一个自定义组件的文件夹，比如叫loading，在该文件夹下新建一个index.js，一个自定义组件loading.vue,在这个loading.vue里面就是这个组件的具体的内容，</p>\n<p>2、在index.js中，规定使用这个组件的名字，以及使用方法，如：<br>    <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">import loadingComponent from &apos;./loading.vue&apos;</span><br><span class=\"line\"> </span><br><span class=\"line\">const loading=&#123;</span><br><span class=\"line\">    install:function(Vue)&#123;</span><br><span class=\"line\">        Vue.component(&apos;Loading&apos;,loadingComponent)</span><br><span class=\"line\">    &#125;  //&apos;Loading&apos;这就是后面可以使用的组件的名字，install是默认的一个方法</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">export default loading;</span><br></pre></td></tr></table></figure></p>\n<p>3、只要在main.js中规定了install方法，就可以像一些公共的插件一样使用Vue.use()来使用，如：<br>    <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> loading <span class=\"keyword\">from</span> <span class=\"string\">'./loading'</span></span><br><span class=\"line\">Vue.use(loading）</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"一-背景\"><a href=\"#一-背景\" class=\"headerlink\" title=\"一. 背景\"></a>一. 背景</h3><p>在项目中有时需要反复用到如区域选择器等组件，每次使用时都需要在对应的vue中添加import,并在component中注册，为了避免多次书写引用代码，可以自定义全局组件，只需要在main.js中一次性注册在vue项目中，可以自定义组件像vue-resource一样使用Vue.use（）方法来使用。</p>\n<h3 id=\"二-具体实现方法\"><a href=\"#二-具体实现方法\" class=\"headerlink\" title=\"二. 具体实现方法\"></a>二. 具体实现方法</h3><p>1、首先建一个自定义组件的文件夹，比如叫loading，在该文件夹下新建一个index.js，一个自定义组件loading.vue,在这个loading.vue里面就是这个组件的具体的内容，</p>\n<p>2、在index.js中，规定使用这个组件的名字，以及使用方法，如：<br>    <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">import loadingComponent from &apos;./loading.vue&apos;</span><br><span class=\"line\"> </span><br><span class=\"line\">const loading=&#123;</span><br><span class=\"line\">    install:function(Vue)&#123;</span><br><span class=\"line\">        Vue.component(&apos;Loading&apos;,loadingComponent)</span><br><span class=\"line\">    &#125;  //&apos;Loading&apos;这就是后面可以使用的组件的名字，install是默认的一个方法</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">export default loading;</span><br></pre></td></tr></table></figure></p>\n<p>3、只要在main.js中规定了install方法，就可以像一些公共的插件一样使用Vue.use()来使用，如：<br>    <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> loading <span class=\"keyword\">from</span> <span class=\"string\">'./loading'</span></span><br><span class=\"line\">Vue.use(loading）</span><br></pre></td></tr></table></figure></p>\n"},{"title":"使用hexo+github创建个人博客并备份源码","date":"2019-03-09T13:52:06.000Z","_content":"### 一、准备\n1. 安装[node.js](https://nodejs.org/en/)\n2. 安装[git-windows](https://gitforwindows.org/)\n3. 安装hexo-cli\n   ```\n   $npm install hexo-cli -g\n   ```\n4. 在GitHub上创建&lt;username&gt;.github.io的仓库\n        e.g. 11wy11.github.io\n5. 配置SSH key  \n   打开本机的控制台，以windows系统为例，可以执行win+R 输入cmd打开，执行\n   ```\n   ssh -keygen -t rsa -C 'D:/id.txt'\n   ```\n   然后连续按3次回车，最终会在用户目录下生成一个文件，找到**目录\\.ssh/id_rsa.pub**文件，用记事本打开全选复制。   \n   在你的github上点击头像>设置进入设置页面，选择SSH and GPG keys, 点击**New SSH key**按钮，名称随意填写，将刚复制的内容粘贴到key,添加\n   ![添加ssh key](create-blog-process/res2.png)\n### 二、搭建流程\n1. 本地创建&lt;username&gt;.github.io\n2. 在本地&lt;username&gt;.github.io文件夹下初始化hexo项目并安装依赖\n   ```\n   hexo init //初始化工程\n   npm install //安装依赖\n   hexo server //启动本地调试器在localhost:4000预览\n   ```\n3. 修改默认主题，可以在github上clone其他的主题，如[yilia](https://github.com/litten/hexo-theme-yilia),[icarus](https://github.com/ppoffice/hexo-theme-icarus),[indigo](https://github.com/yscoder/hexo-theme-indigo)等\n    * 以indigo为例，在本地&lt;username&gt;.github.io文件夹下执行以下命令安装主题\n    ```\n     git clone git@github.com:yscoder/hexo-theme-indigo.git themes/indigo  \n    ```\n    * 修改工程中的_config.yml配置文件，将themes: landscope改为themes: indigo\n    ![修改配置](create-blog-process/res1.png)\n    * 依赖安装分别安装Less,Feed,Json-content依赖，执行如下命令\n    ```\n    $ npm install hexo-renderer-less --save\n    $ npm install hexo-generator-feed --save\n    $ npm install hexo-generator-json-content --save\n    ```\n    * 执行` hexo s `命令启动服务器在localhost:4000查看效果\n4. 新建文章，使用hexo new  \"my-first blog\"，会在source/_posts下创建my-first-blog.md的页面文件\n   进行编写\n5. 发布博客  \n   首先修改工程中的_config.yml配置文件，在最后三行添加以下代码，将username换成自己的git用户名\n    ```\n    deploy:\n      type: git\n      repo: git@github.com:<username>/<username>.github.io.git\n      branch: master\n    ```\n    其次安装hexo-deployer-git 执行 `npm install hexo-deployer-git --save`\n    在工程文件夹内右键git bash进入命令行 输入hexo g，编译为静态文件，生成public文件夹，使用 hexo d 部署，此时可以访问https://&lt;username&gt;.github.io查看你的博客\n6. 备份源码  \n    在工程文件夹内右键git bash进入命令行 输入 touch .gitignore ，生成“.gitignore”文件。  \n    在”.gitignore” 文件里输入你要忽略的文件夹及其文件就可以了。（注意格式）  \n    我的 .gitignore：\n     ```\n     .deploy_git/\n     node_modules/\n     ```                  \n     执行以下命令\n     ```git\n     #git初始化\n     git init\n     #创建hexo分支，用来存放源码\n     git checkout -b hexo\n     #git 文件添加\n     git add .\n     #git 提交\n     git commit -m \"init\"\n     #添加远程仓库\n     git remote add origin git@github.com:<username>/<username>.github.io.git\n     #push到hexo分支\n     git push origin hexo\n     ```                   \n    执行hexo g -d生成网站并部署到GitHub上  \n    这样一来，在GitHub上的git@github.com:&lt;username&gt;/&lt;username&gt;.github.io.git仓库就有两个分支，一个hexo分支用来存放网站的原始文件，一个master分支用来存放生成的静态网页。\n7. 其他设备更新博客步骤：  \n    1、先安装hexo   \n    $ npm install -g hexo-cli  \n    2、存在github上的git clone下来   \n    git clone -b hexo git@github.com:&lt;username&gt;/&lt;username&gt;.github.io.git \n    3、项目文件夹下  \n    $ npm install \n    $ npm install hexo-deployer-git\n    4、重新配置github和coding的公钥  \n    5、编写博客push 到远程分支\n8. 补充：\n    有时会出现下载的主题无法上传，首先删除themes/主题文件夹下的`.git`,使用` git rm --cached themes/indigo`命令清空后重新上传\n`\n","source":"_posts/create-blog-process.md","raw":"---\ntitle: 使用hexo+github创建个人博客并备份源码\ndate: 2019-03-09 21:52:06\ntags: \n   - hexo\n   - git\ncategories: Tools   \n---\n### 一、准备\n1. 安装[node.js](https://nodejs.org/en/)\n2. 安装[git-windows](https://gitforwindows.org/)\n3. 安装hexo-cli\n   ```\n   $npm install hexo-cli -g\n   ```\n4. 在GitHub上创建&lt;username&gt;.github.io的仓库\n        e.g. 11wy11.github.io\n5. 配置SSH key  \n   打开本机的控制台，以windows系统为例，可以执行win+R 输入cmd打开，执行\n   ```\n   ssh -keygen -t rsa -C 'D:/id.txt'\n   ```\n   然后连续按3次回车，最终会在用户目录下生成一个文件，找到**目录\\.ssh/id_rsa.pub**文件，用记事本打开全选复制。   \n   在你的github上点击头像>设置进入设置页面，选择SSH and GPG keys, 点击**New SSH key**按钮，名称随意填写，将刚复制的内容粘贴到key,添加\n   ![添加ssh key](create-blog-process/res2.png)\n### 二、搭建流程\n1. 本地创建&lt;username&gt;.github.io\n2. 在本地&lt;username&gt;.github.io文件夹下初始化hexo项目并安装依赖\n   ```\n   hexo init //初始化工程\n   npm install //安装依赖\n   hexo server //启动本地调试器在localhost:4000预览\n   ```\n3. 修改默认主题，可以在github上clone其他的主题，如[yilia](https://github.com/litten/hexo-theme-yilia),[icarus](https://github.com/ppoffice/hexo-theme-icarus),[indigo](https://github.com/yscoder/hexo-theme-indigo)等\n    * 以indigo为例，在本地&lt;username&gt;.github.io文件夹下执行以下命令安装主题\n    ```\n     git clone git@github.com:yscoder/hexo-theme-indigo.git themes/indigo  \n    ```\n    * 修改工程中的_config.yml配置文件，将themes: landscope改为themes: indigo\n    ![修改配置](create-blog-process/res1.png)\n    * 依赖安装分别安装Less,Feed,Json-content依赖，执行如下命令\n    ```\n    $ npm install hexo-renderer-less --save\n    $ npm install hexo-generator-feed --save\n    $ npm install hexo-generator-json-content --save\n    ```\n    * 执行` hexo s `命令启动服务器在localhost:4000查看效果\n4. 新建文章，使用hexo new  \"my-first blog\"，会在source/_posts下创建my-first-blog.md的页面文件\n   进行编写\n5. 发布博客  \n   首先修改工程中的_config.yml配置文件，在最后三行添加以下代码，将username换成自己的git用户名\n    ```\n    deploy:\n      type: git\n      repo: git@github.com:<username>/<username>.github.io.git\n      branch: master\n    ```\n    其次安装hexo-deployer-git 执行 `npm install hexo-deployer-git --save`\n    在工程文件夹内右键git bash进入命令行 输入hexo g，编译为静态文件，生成public文件夹，使用 hexo d 部署，此时可以访问https://&lt;username&gt;.github.io查看你的博客\n6. 备份源码  \n    在工程文件夹内右键git bash进入命令行 输入 touch .gitignore ，生成“.gitignore”文件。  \n    在”.gitignore” 文件里输入你要忽略的文件夹及其文件就可以了。（注意格式）  \n    我的 .gitignore：\n     ```\n     .deploy_git/\n     node_modules/\n     ```                  \n     执行以下命令\n     ```git\n     #git初始化\n     git init\n     #创建hexo分支，用来存放源码\n     git checkout -b hexo\n     #git 文件添加\n     git add .\n     #git 提交\n     git commit -m \"init\"\n     #添加远程仓库\n     git remote add origin git@github.com:<username>/<username>.github.io.git\n     #push到hexo分支\n     git push origin hexo\n     ```                   \n    执行hexo g -d生成网站并部署到GitHub上  \n    这样一来，在GitHub上的git@github.com:&lt;username&gt;/&lt;username&gt;.github.io.git仓库就有两个分支，一个hexo分支用来存放网站的原始文件，一个master分支用来存放生成的静态网页。\n7. 其他设备更新博客步骤：  \n    1、先安装hexo   \n    $ npm install -g hexo-cli  \n    2、存在github上的git clone下来   \n    git clone -b hexo git@github.com:&lt;username&gt;/&lt;username&gt;.github.io.git \n    3、项目文件夹下  \n    $ npm install \n    $ npm install hexo-deployer-git\n    4、重新配置github和coding的公钥  \n    5、编写博客push 到远程分支\n8. 补充：\n    有时会出现下载的主题无法上传，首先删除themes/主题文件夹下的`.git`,使用` git rm --cached themes/indigo`命令清空后重新上传\n`\n","slug":"create-blog-process","published":1,"updated":"2019-03-13T12:42:48.308Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt774d7o0002ngbdu2eenksa","content":"<h3 id=\"一、准备\"><a href=\"#一、准备\" class=\"headerlink\" title=\"一、准备\"></a>一、准备</h3><ol>\n<li>安装<a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">node.js</a></li>\n<li>安装<a href=\"https://gitforwindows.org/\" target=\"_blank\" rel=\"noopener\">git-windows</a></li>\n<li><p>安装hexo-cli</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$npm install hexo-cli -g</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在GitHub上创建&lt;username&gt;.github.io的仓库</p>\n<pre><code>e.g. 11wy11.github.io\n</code></pre></li>\n<li><p>配置SSH key<br>打开本机的控制台，以windows系统为例，可以执行win+R 输入cmd打开，执行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -keygen -t rsa -C &apos;D:/id.txt&apos;</span><br></pre></td></tr></table></figure>\n<p>然后连续按3次回车，最终会在用户目录下生成一个文件，找到<strong>目录.ssh/id_rsa.pub</strong>文件，用记事本打开全选复制。<br>在你的github上点击头像&gt;设置进入设置页面，选择SSH and GPG keys, 点击<strong>New SSH key</strong>按钮，名称随意填写，将刚复制的内容粘贴到key,添加<br><img src=\"/2019/03/09/create-blog-process/res2.png\" alt=\"添加ssh key\"></p>\n<h3 id=\"二、搭建流程\"><a href=\"#二、搭建流程\" class=\"headerlink\" title=\"二、搭建流程\"></a>二、搭建流程</h3></li>\n<li>本地创建&lt;username&gt;.github.io</li>\n<li><p>在本地&lt;username&gt;.github.io文件夹下初始化hexo项目并安装依赖</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init //初始化工程</span><br><span class=\"line\">npm install //安装依赖</span><br><span class=\"line\">hexo server //启动本地调试器在localhost:4000预览</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改默认主题，可以在github上clone其他的主题，如<a href=\"https://github.com/litten/hexo-theme-yilia\" target=\"_blank\" rel=\"noopener\">yilia</a>,<a href=\"https://github.com/ppoffice/hexo-theme-icarus\" target=\"_blank\" rel=\"noopener\">icarus</a>,<a href=\"https://github.com/yscoder/hexo-theme-indigo\" target=\"_blank\" rel=\"noopener\">indigo</a>等</p>\n<ul>\n<li><p>以indigo为例，在本地&lt;username&gt;.github.io文件夹下执行以下命令安装主题</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone git@github.com:yscoder/hexo-theme-indigo.git themes/indigo</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改工程中的_config.yml配置文件，将themes: landscope改为themes: indigo<br><img src=\"/2019/03/09/create-blog-process/res1.png\" alt=\"修改配置\"></p>\n</li>\n<li><p>依赖安装分别安装Less,Feed,Json-content依赖，执行如下命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-renderer-less --save</span><br><span class=\"line\">$ npm install hexo-generator-feed --save</span><br><span class=\"line\">$ npm install hexo-generator-json-content --save</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>执行<code>hexo s</code>命令启动服务器在localhost:4000查看效果</p>\n</li>\n</ul>\n</li>\n<li>新建文章，使用hexo new  “my-first blog”，会在source/_posts下创建my-first-blog.md的页面文件<br>进行编写</li>\n<li><p>发布博客<br>首先修改工程中的_config.yml配置文件，在最后三行添加以下代码，将username换成自己的git用户名</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: git@github.com:&lt;username&gt;/&lt;username&gt;.github.io.git</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n<p> 其次安装hexo-deployer-git 执行 <code>npm install hexo-deployer-git --save</code><br> 在工程文件夹内右键git bash进入命令行 输入hexo g，编译为静态文件，生成public文件夹，使用 hexo d 部署，此时可以访问https://&lt;username&gt;.github.io查看你的博客</p>\n</li>\n<li>备份源码<br> 在工程文件夹内右键git bash进入命令行 输入 touch .gitignore ，生成“.gitignore”文件。<br> 在”.gitignore” 文件里输入你要忽略的文件夹及其文件就可以了。（注意格式）<br> 我的 .gitignore：<pre><code>.deploy_git/\nnode_modules/\n</code></pre>  执行以下命令<pre><code class=\"git\">#git初始化\ngit init\n#创建hexo分支，用来存放源码\ngit checkout -b hexo\n#git 文件添加\ngit add .\n#git 提交\ngit commit -m &quot;init&quot;\n#添加远程仓库\ngit remote add origin git@github.com:&lt;username&gt;/&lt;username&gt;.github.io.git\n#push到hexo分支\ngit push origin hexo\n</code></pre>\n 执行hexo g -d生成网站并部署到GitHub上<br> 这样一来，在GitHub上的<a href=\"mailto:git@github.com\" target=\"_blank\" rel=\"noopener\">git@github.com</a>:&lt;username&gt;/&lt;username&gt;.github.io.git仓库就有两个分支，一个hexo分支用来存放网站的原始文件，一个master分支用来存放生成的静态网页。</li>\n<li>其他设备更新博客步骤：<br> 1、先安装hexo<br> $ npm install -g hexo-cli<br> 2、存在github上的git clone下来<br> git clone -b hexo <a href=\"mailto:git@github.com\" target=\"_blank\" rel=\"noopener\">git@github.com</a>:&lt;username&gt;/&lt;username&gt;.github.io.git<br> 3、项目文件夹下<br> $ npm install<br> $ npm install hexo-deployer-git<br> 4、重新配置github和coding的公钥<br> 5、编写博客push 到远程分支</li>\n<li>补充：<br> 有时会出现下载的主题无法上传，首先删除themes/主题文件夹下的<code>.git</code>,使用<code>git rm --cached themes/indigo</code>命令清空后重新上传<br>`</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"一、准备\"><a href=\"#一、准备\" class=\"headerlink\" title=\"一、准备\"></a>一、准备</h3><ol>\n<li>安装<a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">node.js</a></li>\n<li>安装<a href=\"https://gitforwindows.org/\" target=\"_blank\" rel=\"noopener\">git-windows</a></li>\n<li><p>安装hexo-cli</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$npm install hexo-cli -g</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在GitHub上创建&lt;username&gt;.github.io的仓库</p>\n<pre><code>e.g. 11wy11.github.io\n</code></pre></li>\n<li><p>配置SSH key<br>打开本机的控制台，以windows系统为例，可以执行win+R 输入cmd打开，执行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -keygen -t rsa -C &apos;D:/id.txt&apos;</span><br></pre></td></tr></table></figure>\n<p>然后连续按3次回车，最终会在用户目录下生成一个文件，找到<strong>目录.ssh/id_rsa.pub</strong>文件，用记事本打开全选复制。<br>在你的github上点击头像&gt;设置进入设置页面，选择SSH and GPG keys, 点击<strong>New SSH key</strong>按钮，名称随意填写，将刚复制的内容粘贴到key,添加<br><img src=\"/2019/03/09/create-blog-process/res2.png\" alt=\"添加ssh key\"></p>\n<h3 id=\"二、搭建流程\"><a href=\"#二、搭建流程\" class=\"headerlink\" title=\"二、搭建流程\"></a>二、搭建流程</h3></li>\n<li>本地创建&lt;username&gt;.github.io</li>\n<li><p>在本地&lt;username&gt;.github.io文件夹下初始化hexo项目并安装依赖</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init //初始化工程</span><br><span class=\"line\">npm install //安装依赖</span><br><span class=\"line\">hexo server //启动本地调试器在localhost:4000预览</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改默认主题，可以在github上clone其他的主题，如<a href=\"https://github.com/litten/hexo-theme-yilia\" target=\"_blank\" rel=\"noopener\">yilia</a>,<a href=\"https://github.com/ppoffice/hexo-theme-icarus\" target=\"_blank\" rel=\"noopener\">icarus</a>,<a href=\"https://github.com/yscoder/hexo-theme-indigo\" target=\"_blank\" rel=\"noopener\">indigo</a>等</p>\n<ul>\n<li><p>以indigo为例，在本地&lt;username&gt;.github.io文件夹下执行以下命令安装主题</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone git@github.com:yscoder/hexo-theme-indigo.git themes/indigo</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改工程中的_config.yml配置文件，将themes: landscope改为themes: indigo<br><img src=\"/2019/03/09/create-blog-process/res1.png\" alt=\"修改配置\"></p>\n</li>\n<li><p>依赖安装分别安装Less,Feed,Json-content依赖，执行如下命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-renderer-less --save</span><br><span class=\"line\">$ npm install hexo-generator-feed --save</span><br><span class=\"line\">$ npm install hexo-generator-json-content --save</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>执行<code>hexo s</code>命令启动服务器在localhost:4000查看效果</p>\n</li>\n</ul>\n</li>\n<li>新建文章，使用hexo new  “my-first blog”，会在source/_posts下创建my-first-blog.md的页面文件<br>进行编写</li>\n<li><p>发布博客<br>首先修改工程中的_config.yml配置文件，在最后三行添加以下代码，将username换成自己的git用户名</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: git@github.com:&lt;username&gt;/&lt;username&gt;.github.io.git</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n<p> 其次安装hexo-deployer-git 执行 <code>npm install hexo-deployer-git --save</code><br> 在工程文件夹内右键git bash进入命令行 输入hexo g，编译为静态文件，生成public文件夹，使用 hexo d 部署，此时可以访问https://&lt;username&gt;.github.io查看你的博客</p>\n</li>\n<li>备份源码<br> 在工程文件夹内右键git bash进入命令行 输入 touch .gitignore ，生成“.gitignore”文件。<br> 在”.gitignore” 文件里输入你要忽略的文件夹及其文件就可以了。（注意格式）<br> 我的 .gitignore：<pre><code>.deploy_git/\nnode_modules/\n</code></pre>  执行以下命令<pre><code class=\"git\">#git初始化\ngit init\n#创建hexo分支，用来存放源码\ngit checkout -b hexo\n#git 文件添加\ngit add .\n#git 提交\ngit commit -m &quot;init&quot;\n#添加远程仓库\ngit remote add origin git@github.com:&lt;username&gt;/&lt;username&gt;.github.io.git\n#push到hexo分支\ngit push origin hexo\n</code></pre>\n 执行hexo g -d生成网站并部署到GitHub上<br> 这样一来，在GitHub上的<a href=\"mailto:git@github.com\" target=\"_blank\" rel=\"noopener\">git@github.com</a>:&lt;username&gt;/&lt;username&gt;.github.io.git仓库就有两个分支，一个hexo分支用来存放网站的原始文件，一个master分支用来存放生成的静态网页。</li>\n<li>其他设备更新博客步骤：<br> 1、先安装hexo<br> $ npm install -g hexo-cli<br> 2、存在github上的git clone下来<br> git clone -b hexo <a href=\"mailto:git@github.com\" target=\"_blank\" rel=\"noopener\">git@github.com</a>:&lt;username&gt;/&lt;username&gt;.github.io.git<br> 3、项目文件夹下<br> $ npm install<br> $ npm install hexo-deployer-git<br> 4、重新配置github和coding的公钥<br> 5、编写博客push 到远程分支</li>\n<li>补充：<br> 有时会出现下载的主题无法上传，首先删除themes/主题文件夹下的<code>.git</code>,使用<code>git rm --cached themes/indigo</code>命令清空后重新上传<br>`</li>\n</ol>\n"},{"title":"Oracle配置SDE支持空间查询","date":"2019-03-09T01:56:40.000Z","_content":"### 配置oracle外部链接库\n1. 将ArcGIS Desktop安装目录下DatabaseSupport文件夹下的st_shapelib.dll拷贝到装有oracle的服务器上，可以放置在任意地方，这里推荐放在Oracle安装目录下的bin文件夹下。  \n    例如：st_shapelib.dll所在文件夹路径：\n    C:\\ProgramFiles(x86)\\ArcGIS\\Desktop10.2\\DatabaseSupport\\Oracle\\Windows64\\st_shapelib.dll\n    拷贝放置位置：E:\\app\\503\\product\\11.2.0\\dbhome_1\\BIN\\ st_shapelib.dll\n2. 修改oracle安装目录下的network/admin文件夹下的listener.ora,将步骤1中的st_shapelib.dll路径添加到\n   ENVS\"EXTPROC_DLLS=ONLY:E:\\app\\503\\product\\11.2.0\\dbhome_1\\bin\\oraclr11.dll;后面\n        例如：linstener文件，添加红色字部分\n    ``` ora\n    # listener.ora Network Configuration File: D:\\app\\Administrator\\product\\11.2.0\\dbhome_1\\NETWORK\\ADMIN\\listener.ora\n    # Generated by Oracle configuration tools.\n    SID_LIST_LISTENER =\n      (SID_LIST =\n        (SID_DESC =\n          (SID_NAME = CLRExtProc)\n          (ORACLE_HOME = E:\\app\\503\\product\\11.2.0\\dbhome_1)\n          (PROGRAM = extproc)\n          (ENVS= \"EXTPROC_DLLS=ONLY:E:\\app\\503\\product\\11.2.0\\dbhome_1\\bin\\oraclr11.dll;E:\\app\\503\\product\\11.2.0\\dbhome_1\\bin\\st_shapelib.dll\") # interesting\n        )\n      )   \n    LISTENER =\n      (DESCRIPTION_LIST =\n        (DESCRIPTION =\n          (ADDRESS = (PROTOCOL = TCP)(HOST = 503-PC)(PORT = 1521))\n    \t  (ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC1521))\n        )\n        (DESCRIPTION =\n          (ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.1.164)(PORT = 1521))\n        )\n      )\n     \n    ADR_BASE_LISTENER = E:\\app\\503\n    ```\n3. 修改oracle安装home目录下的hs/admin文件夹下的extproc.ora，具体路径示例：E:\\app\\503\\product\\11.2.0\\dbhome_1\\hs\\admin\\extproc.ora，将最后一行的SET EXTPROC_DLLS=  设为ANY\n   ![extproc.ora设置](oracle-st-geometry/res1.png)\n4. 通过任何一个数据库管理软件，这里以sql-plus为例，使用sde用户登录\n   \t首先执行：\n   \t`select * from user_libraries`\n\t查看是否有ST_SHAPELIB并检查路径是否与步骤1中的一致，通常默认为c盘第一次安装Arcgis时的相关路径。结果如下：\n\t ![extproc.ora设置](oracle-st-geometry/res2.png)\n\t 如果路径与步骤1中st_shapelib的路径不一致，执行以下两条命令：\n\t + Create or replace library st_SHAPELIB  as <步骤1中的st_shapelib路径>\n\t  ![extproc.ora设置](oracle-st-geometry/res3.png)\n     + Alter package sde.st_geometry_shapelib_pkg compile reuse settings\n     ![extproc.ora设置](oracle-st-geometry/res4.png)\n5. 重启监听器OracleOraDB11g_home1TNSListener，有时也需要重启服务OracleServiceORCL。\n\n\n","source":"_posts/oracle-st-geometry.md","raw":"---\ntitle: Oracle配置SDE支持空间查询\ndate: 2019-03-09 09:56:40\ncategories: ArcGIS\ntags:\n    - ArcGIS\n    - Oracle\n---\n### 配置oracle外部链接库\n1. 将ArcGIS Desktop安装目录下DatabaseSupport文件夹下的st_shapelib.dll拷贝到装有oracle的服务器上，可以放置在任意地方，这里推荐放在Oracle安装目录下的bin文件夹下。  \n    例如：st_shapelib.dll所在文件夹路径：\n    C:\\ProgramFiles(x86)\\ArcGIS\\Desktop10.2\\DatabaseSupport\\Oracle\\Windows64\\st_shapelib.dll\n    拷贝放置位置：E:\\app\\503\\product\\11.2.0\\dbhome_1\\BIN\\ st_shapelib.dll\n2. 修改oracle安装目录下的network/admin文件夹下的listener.ora,将步骤1中的st_shapelib.dll路径添加到\n   ENVS\"EXTPROC_DLLS=ONLY:E:\\app\\503\\product\\11.2.0\\dbhome_1\\bin\\oraclr11.dll;后面\n        例如：linstener文件，添加红色字部分\n    ``` ora\n    # listener.ora Network Configuration File: D:\\app\\Administrator\\product\\11.2.0\\dbhome_1\\NETWORK\\ADMIN\\listener.ora\n    # Generated by Oracle configuration tools.\n    SID_LIST_LISTENER =\n      (SID_LIST =\n        (SID_DESC =\n          (SID_NAME = CLRExtProc)\n          (ORACLE_HOME = E:\\app\\503\\product\\11.2.0\\dbhome_1)\n          (PROGRAM = extproc)\n          (ENVS= \"EXTPROC_DLLS=ONLY:E:\\app\\503\\product\\11.2.0\\dbhome_1\\bin\\oraclr11.dll;E:\\app\\503\\product\\11.2.0\\dbhome_1\\bin\\st_shapelib.dll\") # interesting\n        )\n      )   \n    LISTENER =\n      (DESCRIPTION_LIST =\n        (DESCRIPTION =\n          (ADDRESS = (PROTOCOL = TCP)(HOST = 503-PC)(PORT = 1521))\n    \t  (ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC1521))\n        )\n        (DESCRIPTION =\n          (ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.1.164)(PORT = 1521))\n        )\n      )\n     \n    ADR_BASE_LISTENER = E:\\app\\503\n    ```\n3. 修改oracle安装home目录下的hs/admin文件夹下的extproc.ora，具体路径示例：E:\\app\\503\\product\\11.2.0\\dbhome_1\\hs\\admin\\extproc.ora，将最后一行的SET EXTPROC_DLLS=  设为ANY\n   ![extproc.ora设置](oracle-st-geometry/res1.png)\n4. 通过任何一个数据库管理软件，这里以sql-plus为例，使用sde用户登录\n   \t首先执行：\n   \t`select * from user_libraries`\n\t查看是否有ST_SHAPELIB并检查路径是否与步骤1中的一致，通常默认为c盘第一次安装Arcgis时的相关路径。结果如下：\n\t ![extproc.ora设置](oracle-st-geometry/res2.png)\n\t 如果路径与步骤1中st_shapelib的路径不一致，执行以下两条命令：\n\t + Create or replace library st_SHAPELIB  as <步骤1中的st_shapelib路径>\n\t  ![extproc.ora设置](oracle-st-geometry/res3.png)\n     + Alter package sde.st_geometry_shapelib_pkg compile reuse settings\n     ![extproc.ora设置](oracle-st-geometry/res4.png)\n5. 重启监听器OracleOraDB11g_home1TNSListener，有时也需要重启服务OracleServiceORCL。\n\n\n","slug":"oracle-st-geometry","published":1,"updated":"2019-03-13T12:43:12.806Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt774d7v0006ngbd3148wpau","content":"<h3 id=\"配置oracle外部链接库\"><a href=\"#配置oracle外部链接库\" class=\"headerlink\" title=\"配置oracle外部链接库\"></a>配置oracle外部链接库</h3><ol>\n<li>将ArcGIS Desktop安装目录下DatabaseSupport文件夹下的st_shapelib.dll拷贝到装有oracle的服务器上，可以放置在任意地方，这里推荐放在Oracle安装目录下的bin文件夹下。<br> 例如：st_shapelib.dll所在文件夹路径：<br> C:\\ProgramFiles(x86)\\ArcGIS\\Desktop10.2\\DatabaseSupport\\Oracle\\Windows64\\st_shapelib.dll<br> 拷贝放置位置：E:\\app\\503\\product\\11.2.0\\dbhome_1\\BIN\\ st_shapelib.dll</li>\n<li><p>修改oracle安装目录下的network/admin文件夹下的listener.ora,将步骤1中的st_shapelib.dll路径添加到<br>ENVS”EXTPROC_DLLS=ONLY:E:\\app\\503\\product\\11.2.0\\dbhome_1\\bin\\oraclr11.dll;后面</p>\n<pre><code>例如：linstener文件，添加红色字部分\n</code></pre> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># listener.ora Network Configuration File: D:\\app\\Administrator\\product\\11.2.0\\dbhome_1\\NETWORK\\ADMIN\\listener.ora</span><br><span class=\"line\"># Generated by Oracle configuration tools.</span><br><span class=\"line\">SID_LIST_LISTENER =</span><br><span class=\"line\">  (SID_LIST =</span><br><span class=\"line\">    (SID_DESC =</span><br><span class=\"line\">      (SID_NAME = CLRExtProc)</span><br><span class=\"line\">      (ORACLE_HOME = E:\\app\\503\\product\\11.2.0\\dbhome_1)</span><br><span class=\"line\">      (PROGRAM = extproc)</span><br><span class=\"line\">      (ENVS= &quot;EXTPROC_DLLS=ONLY:E:\\app\\503\\product\\11.2.0\\dbhome_1\\bin\\oraclr11.dll;E:\\app\\503\\product\\11.2.0\\dbhome_1\\bin\\st_shapelib.dll&quot;) # interesting</span><br><span class=\"line\">    )</span><br><span class=\"line\">  )   </span><br><span class=\"line\">LISTENER =</span><br><span class=\"line\">  (DESCRIPTION_LIST =</span><br><span class=\"line\">    (DESCRIPTION =</span><br><span class=\"line\">      (ADDRESS = (PROTOCOL = TCP)(HOST = 503-PC)(PORT = 1521))</span><br><span class=\"line\">\t  (ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC1521))</span><br><span class=\"line\">    )</span><br><span class=\"line\">    (DESCRIPTION =</span><br><span class=\"line\">      (ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.1.164)(PORT = 1521))</span><br><span class=\"line\">    )</span><br><span class=\"line\">  )</span><br><span class=\"line\"> </span><br><span class=\"line\">ADR_BASE_LISTENER = E:\\app\\503</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改oracle安装home目录下的hs/admin文件夹下的extproc.ora，具体路径示例：E:\\app\\503\\product\\11.2.0\\dbhome_1\\hs\\admin\\extproc.ora，将最后一行的SET EXTPROC_DLLS=  设为ANY<br><img src=\"/2019/03/09/oracle-st-geometry/res1.png\" alt=\"extproc.ora设置\"></p>\n</li>\n<li>通过任何一个数据库管理软件，这里以sql-plus为例，使用sde用户登录<pre><code>首先执行：\n`select * from user_libraries`\n</code></pre> 查看是否有ST_SHAPELIB并检查路径是否与步骤1中的一致，通常默认为c盘第一次安装Arcgis时的相关路径。结果如下：<br>  <img src=\"/2019/03/09/oracle-st-geometry/res2.png\" alt=\"extproc.ora设置\"><br>  如果路径与步骤1中st_shapelib的路径不一致，执行以下两条命令：<ul>\n<li>Create or replace library st_SHAPELIB  as &lt;步骤1中的st_shapelib路径&gt;<br><img src=\"/2019/03/09/oracle-st-geometry/res3.png\" alt=\"extproc.ora设置\"></li>\n<li>Alter package sde.st_geometry_shapelib_pkg compile reuse settings<br><img src=\"/2019/03/09/oracle-st-geometry/res4.png\" alt=\"extproc.ora设置\"></li>\n</ul>\n</li>\n<li>重启监听器OracleOraDB11g_home1TNSListener，有时也需要重启服务OracleServiceORCL。</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"配置oracle外部链接库\"><a href=\"#配置oracle外部链接库\" class=\"headerlink\" title=\"配置oracle外部链接库\"></a>配置oracle外部链接库</h3><ol>\n<li>将ArcGIS Desktop安装目录下DatabaseSupport文件夹下的st_shapelib.dll拷贝到装有oracle的服务器上，可以放置在任意地方，这里推荐放在Oracle安装目录下的bin文件夹下。<br> 例如：st_shapelib.dll所在文件夹路径：<br> C:\\ProgramFiles(x86)\\ArcGIS\\Desktop10.2\\DatabaseSupport\\Oracle\\Windows64\\st_shapelib.dll<br> 拷贝放置位置：E:\\app\\503\\product\\11.2.0\\dbhome_1\\BIN\\ st_shapelib.dll</li>\n<li><p>修改oracle安装目录下的network/admin文件夹下的listener.ora,将步骤1中的st_shapelib.dll路径添加到<br>ENVS”EXTPROC_DLLS=ONLY:E:\\app\\503\\product\\11.2.0\\dbhome_1\\bin\\oraclr11.dll;后面</p>\n<pre><code>例如：linstener文件，添加红色字部分\n</code></pre> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># listener.ora Network Configuration File: D:\\app\\Administrator\\product\\11.2.0\\dbhome_1\\NETWORK\\ADMIN\\listener.ora</span><br><span class=\"line\"># Generated by Oracle configuration tools.</span><br><span class=\"line\">SID_LIST_LISTENER =</span><br><span class=\"line\">  (SID_LIST =</span><br><span class=\"line\">    (SID_DESC =</span><br><span class=\"line\">      (SID_NAME = CLRExtProc)</span><br><span class=\"line\">      (ORACLE_HOME = E:\\app\\503\\product\\11.2.0\\dbhome_1)</span><br><span class=\"line\">      (PROGRAM = extproc)</span><br><span class=\"line\">      (ENVS= &quot;EXTPROC_DLLS=ONLY:E:\\app\\503\\product\\11.2.0\\dbhome_1\\bin\\oraclr11.dll;E:\\app\\503\\product\\11.2.0\\dbhome_1\\bin\\st_shapelib.dll&quot;) # interesting</span><br><span class=\"line\">    )</span><br><span class=\"line\">  )   </span><br><span class=\"line\">LISTENER =</span><br><span class=\"line\">  (DESCRIPTION_LIST =</span><br><span class=\"line\">    (DESCRIPTION =</span><br><span class=\"line\">      (ADDRESS = (PROTOCOL = TCP)(HOST = 503-PC)(PORT = 1521))</span><br><span class=\"line\">\t  (ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC1521))</span><br><span class=\"line\">    )</span><br><span class=\"line\">    (DESCRIPTION =</span><br><span class=\"line\">      (ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.1.164)(PORT = 1521))</span><br><span class=\"line\">    )</span><br><span class=\"line\">  )</span><br><span class=\"line\"> </span><br><span class=\"line\">ADR_BASE_LISTENER = E:\\app\\503</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改oracle安装home目录下的hs/admin文件夹下的extproc.ora，具体路径示例：E:\\app\\503\\product\\11.2.0\\dbhome_1\\hs\\admin\\extproc.ora，将最后一行的SET EXTPROC_DLLS=  设为ANY<br><img src=\"/2019/03/09/oracle-st-geometry/res1.png\" alt=\"extproc.ora设置\"></p>\n</li>\n<li>通过任何一个数据库管理软件，这里以sql-plus为例，使用sde用户登录<pre><code>首先执行：\n`select * from user_libraries`\n</code></pre> 查看是否有ST_SHAPELIB并检查路径是否与步骤1中的一致，通常默认为c盘第一次安装Arcgis时的相关路径。结果如下：<br>  <img src=\"/2019/03/09/oracle-st-geometry/res2.png\" alt=\"extproc.ora设置\"><br>  如果路径与步骤1中st_shapelib的路径不一致，执行以下两条命令：<ul>\n<li>Create or replace library st_SHAPELIB  as &lt;步骤1中的st_shapelib路径&gt;<br><img src=\"/2019/03/09/oracle-st-geometry/res3.png\" alt=\"extproc.ora设置\"></li>\n<li>Alter package sde.st_geometry_shapelib_pkg compile reuse settings<br><img src=\"/2019/03/09/oracle-st-geometry/res4.png\" alt=\"extproc.ora设置\"></li>\n</ul>\n</li>\n<li>重启监听器OracleOraDB11g_home1TNSListener，有时也需要重启服务OracleServiceORCL。</li>\n</ol>\n"},{"title":"git-command","date":"2019-03-13T12:41:15.000Z","_content":"\n","source":"_posts/git-command.md","raw":"---\ntitle: git-command\ndate: 2019-03-13 20:41:15\ntags:\n   - git\ncategories: -使用技巧\n---\n\n","slug":"git-command","published":1,"updated":"2019-03-13T12:42:48.316Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt774d7x0007ngbducpudyrl","content":"","site":{"data":{}},"excerpt":"","more":""}],"PostAsset":[{"_id":"source/_posts/create-blog-process/res1.png","post":"cjt774d7o0002ngbdu2eenksa","slug":"res1.png","modified":1,"renderable":1},{"_id":"source/_posts/create-blog-process/res2.png","post":"cjt774d7o0002ngbdu2eenksa","slug":"res2.png","modified":1,"renderable":1},{"_id":"source/_posts/oracle-st-geometry/res1.png","post":"cjt774d7v0006ngbd3148wpau","slug":"res1.png","modified":1,"renderable":1},{"_id":"source/_posts/oracle-st-geometry/res2.png","post":"cjt774d7v0006ngbd3148wpau","slug":"res2.png","modified":1,"renderable":1},{"_id":"source/_posts/oracle-st-geometry/res3.png","post":"cjt774d7v0006ngbd3148wpau","slug":"res3.png","modified":1,"renderable":1},{"_id":"source/_posts/oracle-st-geometry/res4.png","post":"cjt774d7v0006ngbd3148wpau","slug":"res4.png","modified":1,"renderable":1}],"PostCategory":[{"post_id":"cjt774d7f0000ngbdrj9towib","category_id":"cjt774d7r0004ngbd0kx706ro","_id":"cjt774d82000bngbdazwh8ljw"},{"post_id":"cjt774d7o0002ngbdu2eenksa","category_id":"cjt774d7z0008ngbd687gpqvw","_id":"cjt774d84000engbd4fr4mluz"},{"post_id":"cjt774d7v0006ngbd3148wpau","category_id":"cjt774d82000cngbd5ou767hk","_id":"cjt774d87000jngbdft45p7uw"},{"post_id":"cjt774d7x0007ngbducpudyrl","category_id":"cjt774d84000fngbdnq1p7y8d","_id":"cjt774d89000lngbdsw1rbplq"}],"PostTag":[{"post_id":"cjt774d7f0000ngbdrj9towib","tag_id":"cjt774d7u0005ngbdipi06e08","_id":"cjt774d81000angbdhac0xmc8"},{"post_id":"cjt774d7o0002ngbdu2eenksa","tag_id":"cjt774d7z0009ngbd8uwgqa44","_id":"cjt774d85000hngbdsnv3ax1l"},{"post_id":"cjt774d7o0002ngbdu2eenksa","tag_id":"cjt774d83000dngbd6tsj3t5c","_id":"cjt774d86000ingbdhmdl59ay"},{"post_id":"cjt774d7v0006ngbd3148wpau","tag_id":"cjt774d85000gngbd2hg6duk4","_id":"cjt774d8d000nngbdatm1vysw"},{"post_id":"cjt774d7v0006ngbd3148wpau","tag_id":"cjt774d88000kngbdmazdzzzt","_id":"cjt774d8d000ongbddtsr8pt1"},{"post_id":"cjt774d7x0007ngbducpudyrl","tag_id":"cjt774d83000dngbd6tsj3t5c","_id":"cjt774d8e000pngbdb1lmd683"}],"Tag":[{"name":"Vue","_id":"cjt774d7u0005ngbdipi06e08"},{"name":"hexo","_id":"cjt774d7z0009ngbd8uwgqa44"},{"name":"git","_id":"cjt774d83000dngbd6tsj3t5c"},{"name":"ArcGIS","_id":"cjt774d85000gngbd2hg6duk4"},{"name":"Oracle","_id":"cjt774d88000kngbdmazdzzzt"}]}}